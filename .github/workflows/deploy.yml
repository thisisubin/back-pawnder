name: Deploy Dockerized Spring Boot to EC2 (No Docker Hub)

on:
  push:
    branches:
      - main

env:
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Find the JAR file and set it as an environment variable
      - name: Set JAR filename
        id: set_jar
        run: |
          JAR_FILE=$(find target -name "*.jar" | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Upload files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_KEY }}
          # Upload the JAR file, Dockerfile, and deploy.yml
          source: "${{ env.JAR_FILE }},Dockerfile,deploy.yml"
          target: "~/app"

      # --- 이 부분이 새롭게 추가되었습니다. ---
      - name: Create SSH key file on runner
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.EC2_SSH_KEY }}" > /home/ubuntu/.ssh/authorized_keys
            chmod 600 /home/ubuntu/.ssh/authorized_keys

      - name: SSH into EC2 and build & run Docker containers
        uses: appleboy/ssh-action@master
        with:
            host: ${{ env.EC2_HOST }}
            username: ubuntu
            key: /home/ubuntu/.ssh/authorized_keys
            script: |
              cd ~/app
              
              docker-compose down || true
              
              docker-compose up --build -d