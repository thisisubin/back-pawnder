name: Deploy Dockerized Spring Boot to EC2 (No Docker Hub)

on:
  push:
    branches:
      - main

env:
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: List target directory
        run: ls -l target/

      - name: Upload source code to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_KEY }}
          source: "target/***-0.0.1-SNAPSHOT.jar"
          target: "~/app"

      - name: SSH into EC2 and build & run Docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_KEY }}
          script: |
            cd ~/app

            docker build -t myapp:latest . || (echo "Docker build failed!" && exit 1)

            docker stop myapp redis-container elasticsearch-container || true
            docker rm myapp redis-container elasticsearch-container || true

            docker volume create redis-data || true
            docker run -d --name redis-container -p 6379:6379 -v redis-data:/data redis:7.0

            docker volume create es-data || true
            docker run -d --name elasticsearch-container -p 9200:9200 -p 9300:9300 \
              -e "discovery.type=single-node" \
              -e "xpack.security.enabled=false" \
              -v es-data:/usr/share/elasticsearch/data \
              docker.elastic.co/elasticsearch/elasticsearch:8.9.0

            docker volume create mysql-data || true
            docker run -d --name mysql-container -p 3306:3306 \
              -e MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} \
              -e MYSQL_DATABASE=${MYSQL_DATABASE} \
              -e MYSQL_USER=${MYSQL_USER} \
              -e MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD} \
              -v mysql-data:/var/lib/mysql \
              mysql:8.0
