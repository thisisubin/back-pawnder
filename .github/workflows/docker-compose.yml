name: Deploy Dockerized Spring Boot to EC2 (No Docker Hub)

on:
  push:
    branches:
      - main

env:
  MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload source code to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_KEY }}
          source: .
          target: "~/app"

      - name: SSH into EC2 and build & run Docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_KEY }}
          script: |
            cd ~/app

            # Build Spring Boot Docker image
            docker build -t myapp:latest .

            # Stop and remove old containers if exist
            docker stop myapp redis-container elasticsearch-container || true
            docker rm myapp redis-container elasticsearch-container || true

            # Run Redis container (with persistent volume)
            docker volume create redis-data || true
            docker run -d --name redis-container -p 6379:6379 \
              -v redis-data:/data redis:7.0

            # Run Elasticsearch container (single node, disable security for dev)
            docker volume create es-data || true
            docker run -d --name elasticsearch-container -p 9200:9200 -p 9300:9300 \
              -e "discovery.type=single-node" \
              -e "xpack.security.enabled=false" \
              -v es-data:/usr/share/elasticsearch/data \
              docker.elastic.co/elasticsearch/elasticsearch:8.9.0

            # Run Spring Boot app container with env variables
            docker run -d --name myapp -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE} \
              -e SPRING_DATASOURCE_USERNAME=${MYSQL_USER} \
              -e SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD} \
              -e SPRING_REDIS_HOST=redis-container \
              myapp:latest